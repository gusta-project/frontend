version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: mixnjuice/frontend
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    working_directory: ~/mixnjuice-frontend
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest codecov'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: 'npm test && codecov'
  docker_build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:$CIRCLE_SHA1 .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  docker_publish:
    executor: docker-publisher
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$CIRCLE_SHA1
  docker_deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - '75:3a:34:5b:2f:1c:07:18:ce:3d:97:ce:0a:e8:2c:7d'
      - run:
          name: Deploy using SSH
          command: |
            ssh deployer@mixnjuice.com "./pull-image.sh mixnjuice/frontend $CIRCLE_SHA1"
workflows:
  version: 2
  main_workflow:
    jobs:
      - build:
          context: builds
      - docker_build:
          filters:
            branches:
              only: master
      - docker_publish:
          context: builds
          requires:
            - docker_build
          filters:
            branches:
              only: master
      - docker_deploy:
          requires:
            - docker_publish
          filters:
            branches:
              only: master
